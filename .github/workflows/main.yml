
name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  OPENSSL_CONF: ci/openssl.cnf

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cargo fmt --all -- --config format_code_in_doc_comments=true --check
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml','**/Cargo.lock') }}
      - name: Set profile
        run: rustup set profile minimal && rustup component add clippy
      - name: Build
        run: cargo build
      - name: Clippy
        run: cargo clippy --all-features -- -D warnings
  test-emulators:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        rust:
          - version: stable # STABLE
          - version: 1.63.0 # MSRV
        features:
          - miniscript
          - signer
        emulator:
          - name: trezor
          - name: ledger
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml','**/Cargo.lock') }}
      - name: Build simulator image
        run: docker build -t hwi/${{ matrix.emulator.name }}_emulator:latest ./ci -f ci/Dockerfile.${{ matrix.emulator.name }}
      - name: Run simulator image
        run: docker run --name simulator --network=host hwi/${{ matrix.emulator.name }}_emulator &
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install python dependencies
        run: pip install -r requirements.txt
      - name: Set default toolchain
        run: rustup default ${{ matrix.rust.version }}
      - name: Set profile
        run: rustup set profile minimal
      - name: Update toolchain
        run: rustup update
      - name: Download and Install HWI
        run: ./get_hwi.sh
      - name: Test python
        run: cargo test --features ${{ matrix.features }} test_python -- --test-threads=1
      - name: Restart simulator
        if: matrix.emulator.name == 'ledger'
        run: docker restart simulator
      - name: Test binary
        run: cargo test --features ${{ matrix.features }} test_binary -- --test-threads=1
      - name: Wipe python
        run: cargo test test_wipe_device_pyhton -- --ignored --test-threads=1
      - name: Restart simulator
        run: docker restart simulator
      - name: Wipe binary
        run: cargo test test_wipe_device_binary -- --ignored --test-threads=1
  test-readme-examples:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-test-md-docs-${{ hashFiles('**/Cargo.toml','**/Cargo.lock') }}
      - name: Build simulator image
        run: docker build -t hwi/ledger_emulator ./ci -f ci/Dockerfile.ledger
      - name: Run simulator image
        run: docker run --name simulator --network=host hwi/ledger_emulator &
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install python dependencies
        run: pip install -r requirements.txt
      - name: Set default toolchain
        run: rustup default nightly
      - name: Set profile
        run: rustup set profile minimal
      - name: Update toolchain
        run: rustup update
      - name: Test
        run: cargo test --features doctest -- doctest::ReadmeDoctests
